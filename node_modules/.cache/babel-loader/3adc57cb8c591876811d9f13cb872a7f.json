{"ast":null,"code":"import React from'react';function backtrack(start_i,start_j,end_i,end_j,v){var ret=[[end_i,end_j]];while(end_i!=start_i||end_j!=start_j){// console.log(end_i ,end_j)\nret.push(v[end_i][end_j]);var a=end_i;var b=end_j;end_i=v[a][b][0];end_j=v[a][b][1];}return ret;}function initialize_visited(row_count,col_count){var visited=new Array(row_count);for(var i=0;i<row_count;i++){visited[i]=new Array(col_count).fill(0);}return visited;}export{backtrack,initialize_visited};","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/algorithms/path_algs/general.js"],"names":["React","backtrack","start_i","start_j","end_i","end_j","v","ret","push","a","b","initialize_visited","row_count","col_count","visited","Array","i","fill"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,SAAT,CAAmBC,OAAnB,CAA4BC,OAA5B,CAAqCC,KAArC,CAA4CC,KAA5C,CAAmDC,CAAnD,CAAsD,CACrD,GAAIC,CAAAA,GAAG,CAAG,CAAC,CAACH,KAAD,CAAQC,KAAR,CAAD,CAAV,CACA,MAAMD,KAAK,EAAIF,OAAT,EAAoBG,KAAK,EAAIF,OAAnC,CAA4C,CAC3C;AACAI,GAAG,CAACC,IAAJ,CAASF,CAAC,CAACF,KAAD,CAAD,CAASC,KAAT,CAAT,EACA,GAAII,CAAAA,CAAC,CAAGL,KAAR,CACA,GAAIM,CAAAA,CAAC,CAAGL,KAAR,CACAD,KAAK,CAAGE,CAAC,CAACG,CAAD,CAAD,CAAKC,CAAL,EAAQ,CAAR,CAAR,CACAL,KAAK,CAAGC,CAAC,CAACG,CAAD,CAAD,CAAKC,CAAL,EAAQ,CAAR,CAAR,CACA,CACD,MAAOH,CAAAA,GAAP,CAGA,CAED,QAASI,CAAAA,kBAAT,CAA4BC,SAA5B,CAAuCC,SAAvC,CAAkD,CACjD,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,SAAV,CAAd,CACA,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,SAApB,CAA+BI,CAAC,EAAhC,CAAoC,CACnCF,OAAO,CAACE,CAAD,CAAP,CAAa,GAAID,CAAAA,KAAJ,CAAUF,SAAV,EAAqBI,IAArB,CAA0B,CAA1B,CAAb,CACA,CACD,MAAOH,CAAAA,OAAP,CACA,CAED,OAAQb,SAAR,CAAmBU,kBAAnB","sourcesContent":["import React from 'react';\n\n\nfunction backtrack(start_i, start_j, end_i, end_j, v) {\n\tlet ret = [[end_i, end_j]]\n\twhile(end_i != start_i || end_j != start_j) {\n\t\t// console.log(end_i ,end_j)\n\t\tret.push(v[end_i][end_j])\n\t\tlet a = end_i\n\t\tlet b = end_j\n\t\tend_i = v[a][b][0]\n\t\tend_j = v[a][b][1]\n\t}\n\treturn ret\n\t\n\n}\n\nfunction initialize_visited(row_count, col_count) {\n\tvar visited = new Array(row_count)\n\tfor (let i = 0; i < row_count; i++) {\n\t\tvisited[i] = new Array(col_count).fill(0)\n\t}\n\treturn visited\n}\n\nexport {backtrack, initialize_visited}"]},"metadata":{},"sourceType":"module"}