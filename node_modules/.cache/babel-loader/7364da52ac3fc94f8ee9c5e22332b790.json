{"ast":null,"code":"import _objectSpread from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import'../../setup/global';// global.rc = 31\n// global.cc = 51\n// random_prims()\n/*\nChoose any vertex at random and add it to the UST.\nSelect any vertex that is not already in the UST and perform a random walk until you encounter a vertex that is in the UST.\nAdd the vertices and edges touched in the random walk to the UST.\nRepeat 2 and 3 until all vertices have been added to the UST.\n*/ // wilson()\nexport default function wilson(){// function wilson () {\nvar visited=initialize_visited(global.rc,global.cc);var walls=initialize_visited(global.rc,global.cc);var x,y,q,out;// randomize array\nvar maze=[],total_vertices=0,to_visit=[];for(var i=1;i<global.rc-1;i++){for(var j=1;j<global.cc-1;j++){if(j%2==1&&i%2==1){// need to connect all of the spaces\ntotal_vertices++;to_visit.push([i,j]);}else{walls[i][j]=1;}}}for(var _i=0;_i<global.cc;_i++){walls[0][_i]=1;walls[global.rc-1][_i]=1;}for(var _i2=0;_i2<global.rc;_i2++){walls[_i2][0]=1;walls[_i2][global.cc-1]=1;}to_visit=shuffle(to_visit);var rand_i=2*Math.floor(Math.random()*Math.floor((global.rc-1)/2))+1;var rand_j=2*Math.floor(Math.random()*Math.floor((global.cc-1)/2))+1;/*\n    algorithm:\n    two dictionaries: current and completed\n    if i, j in current ever sees itself, backtrack\n    backtrack algorithm gets rid of all of the previously seen values and keeps going until it hits an element in \n    the completed set\n    join current and completed and reset current\n    */var current={},complete={},order=[],res=[];var p,s,rand_value,temp,back_ret;q=[];rand_value=[rand_i,rand_j];s=rand_value.toString();complete[s]=rand_value;visited[rand_i][rand_j]=1;// console.log(\"start \", rand_value, complete)\nfor(var _i3=0;_i3<to_visit.length;_i3++){if(visited[to_visit[_i3][0]][to_visit[_i3][1]]!=0){// console.log(\"skip \", to_visit[i])\ncontinue;}else{// console.log(\"to visit: \", to_visit[i])\nq.push(to_visit[_i3]);s=to_visit[_i3].toString();current[s]=to_visit[_i3];visited[to_visit[_i3][0]][to_visit[_i3][1]]=1;}while(q.length!=0){out=q.shift();x=out[0];y=out[1];s=out.toString();// console.log('out: ', out)\n// if the popped value is in the complete set, then combine the two sets\nif(s in complete){order=get_maze(x,y,visited);res=res.concat(order.reverse());complete=_objectSpread(_objectSpread({},complete),current);// console.log(\"completed at \", s, complete)\ncurrent={};// else the popped value is not in the complete set so keep searching\n}else{//TODO: disallow direction reversals\nrand_value=random_adjacent(x,y,visited);s=rand_value.toString();// console.log(\"not in complete \", s, current, s in current)\ntemp=[x,y];while(s in current){// console.log(\"starting backtrack\")\nback_ret=backtrack(temp[0],temp[1],rand_value[0],rand_value[1],visited,current);visited=back_ret.v;current=back_ret.c;temp=rand_value;// store this REPEATED value\n// HAVE TO MAKE SURE RAND_VALUE IS NOT IN CURRENT AS WELL\nrand_value=random_adjacent(temp[0],temp[1],visited);// get the NEW value\ns=rand_value.toString();}// console.log(rand_value[0], visited[temp[0]][temp[1]][0], rand_value[1], visited[temp[0]][temp[1]][1])\n// if (rand_value[0] == visited[temp[0]][temp[1]][0] && rand_value[1] == visited[temp[0]][temp[1]][1]) {\n//     console.log('ALERT!!!!!!!')\n// }\nvisited[rand_value[0]][rand_value[1]]=temp;// connect the REPEATED value to the NEW value    \ncurrent[s]=rand_value;q.push(rand_value);}}}maze.push(res[0]);var temp1,temp2,temp3;for(var _i4=1;_i4<res.length;_i4++){temp1=res[_i4-1];temp2=res[_i4];// walls[temp1[0]][temp1[1]] = 0\n// walls[temp2[0]][temp2[1]] = 0\nif(temp1[0]==temp2[0]){temp3=temp1[1]+temp2[1];temp3/=2;maze.push([temp1[0],temp3]);walls[temp1[0]][temp3]=0;}else{temp3=temp1[0]+temp2[0];temp3/=2;maze.push([temp3,temp1[1]]);walls[temp3][temp1[1]]=0;}maze.push(res[_i4]);}// console.log(set.extract())\nvar ret_walls=[];for(var _i5=0;_i5<walls.length;_i5++){for(var _j=0;_j<walls[0].length;_j++){if(walls[_i5][_j]==1){ret_walls.push([_i5,_j]);}}}// console.log(ret_walls)\n// // console.log(maze)\n// // console.log( {\"maze\": maze, \"walls\": ret_walls})\nreturn{\"maze\":maze,\"walls\":ret_walls};}function get_maze(x,y,visited){var o=[[x,y]],temp;while(visited[x][y]!=1){temp=visited[x][y];// console.log(x, y, temp)\no.push(visited[x][y]);x=temp[0];y=temp[1];}return o;}function backtrack(back_start_i,back_start_j,back_end_i,back_end_j,visited,current){var out,s;while(back_start_i!=back_end_i||back_start_j!=back_end_j){out=visited[back_start_i][back_start_j];visited[back_start_i][back_start_j]=0;s=[back_start_i,back_start_j].toString();// console.log(current[s])\n// console.log(\"backtracking \", back_start_i, back_start_j, back_end_i, back_end_j, out, visited[back_end_i][back_end_j])\ndelete current[s];back_start_i=out[0];back_start_j=out[1];}// console.log(\"backtracking STOP\", out, visited[back_end_i][back_end_j])\n// console.log(visited[back_start_i][back_start_j])\nreturn{v:visited,c:current};}function random_adjacent(x,y,visited){var temp,prev,list=[];prev=visited[x][y];// 2 directions to travel in \nif(x==1&&y==1||x==global.rc-2&&y==global.cc-2||x==1&&y==global.cc-2||x==global.rc-2&&y==1){if(x==1&&y==1){list=[[x+2,y],[x,y+2]];}else if(x==global.rc-2&&y==global.cc-2){list=[[x-2,y],[x,y-2]];}else if(x==1&&y==global.cc-2){list=[[x+2,y],[x,y-2]];}else if(x==global.rc-2&&y==1){list=[[x-2,y],[x,y+2]];}}else if(x==1||y==1||x==global.rc-2||y==global.cc-2){// 3 directions to travel in\nif(x==1||x==global.rc-2){x==1?list.push([x+2,y]):list.push([x-2,y]);list.push([x,y+2]);list.push([x,y-2]);}else{y==1?list.push([x,y+2]):list.push([x,y-2]);list.push([x+2,y]);list.push([x-2,y]);}}else{// 4 directions to travel in\nlist=[[x+2,y],[x-2,y],[x,y-2],[x,y+2]];}list=shuffle(list);if(list[0][0]==prev[0]&&list[0][1]==prev[1]){// console.log(list[0], prev, \"SAME\", list[1])\n// console.log(prev, [x,y], list[1])\nreturn list[1];}else{// console.log(prev, [x,y], list[0])\nreturn list[0];}/* DEBUG\n    start  [ 9, 29 ] { '9,29': [ 9, 29 ] }\n1 [ 15, 23 ]\n[ 15, 23 ] [ 15, 25 ]\n[ 15, 25 ] [ 17, 25 ]\n[ 17, 25 ] [ 17, 27 ]\n[ 17, 27 ] [ 15, 27 ]\n[ 15, 27 ] [ 13, 27 ]\n[ 13, 27 ] [ 13, 29 ]\nbacktracking  13 29 13 27 [ 13, 27 ]\n[ 13, 29 ] [ 13, 27 ]\n[ 13, 27 ] [ 13, 29 ]\n[ 13, 29 ] [ 13, 31 ]\n[ 13, 31 ] [ 11, 31 ]\n[ 11, 31 ] [ 9, 31 ]\n[ 9, 31 ] [ 9, 33 ]\n[ 9, 33 ] [ 9, 35 ]\nbacktracking  9 35 9 33 [ 9, 33 ]\n[ 9, 35 ] [ 9, 33 ]\n[ 9, 33 ] [ 11, 33 ]\nbacktracking  11 33 9 33 [ 9, 33 ]\n[ 11, 33 ] [ 9, 33 ]\n[ 9, 33 ] [ 11, 33 ]\nbacktracking  11 33 11 31 [ 9, 33 ]\nbacktracking  9 33 11 31 [ 11, 33 ]\nbacktracking  11 33 11 31 0\n    */}// get random item from object\nfunction random_property(obj){var keys=Object.keys(obj);return obj[keys[keys.length*Math.random()<<0]];};function initialize_visited(row_count,col_count){var visited=new Array(row_count);for(var i=0;i<row_count;i++){visited[i]=new Array(col_count).fill(0);}return visited;}function shuffle(a){var j,x,i;for(var _i6=a.length-1;_i6>0;_i6--){j=Math.floor(Math.random()*(_i6+1));x=a[_i6];a[_i6]=a[j];a[j]=x;}return a;}","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/algorithms/maze_algs/wilson.js"],"names":["React","wilson","visited","initialize_visited","global","rc","cc","walls","x","y","q","out","maze","total_vertices","to_visit","i","j","push","shuffle","rand_i","Math","floor","random","rand_j","current","complete","order","res","p","s","rand_value","temp","back_ret","toString","length","shift","get_maze","concat","reverse","random_adjacent","backtrack","v","c","temp1","temp2","temp3","ret_walls","o","back_start_i","back_start_j","back_end_i","back_end_j","prev","list","random_property","obj","keys","Object","row_count","col_count","Array","fill","a"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../../setup/global'\n\n// global.rc = 31\n// global.cc = 51\n// random_prims()\n/*\nChoose any vertex at random and add it to the UST.\nSelect any vertex that is not already in the UST and perform a random walk until you encounter a vertex that is in the UST.\nAdd the vertices and edges touched in the random walk to the UST.\nRepeat 2 and 3 until all vertices have been added to the UST.\n*/\n// wilson()\nexport default function wilson() {\n// function wilson () {\n    let visited = initialize_visited(global.rc, global.cc);\n    let walls = initialize_visited(global.rc, global.cc)\n    let x, y, q, out\n    // randomize array\n    let maze = [], total_vertices = 0, to_visit = []\n    for (let i = 1; i < global.rc-1; i++) {\n        for (let j = 1; j < global.cc-1; j++) {\n            if (j % 2 == 1 && i % 2 == 1) {\n                // need to connect all of the spaces\n                total_vertices ++;\n                to_visit.push([i,j])\n            } else {\n                walls[i][j] = 1\n            }\n        }\n    }\n    for (let i = 0; i < global.cc; i++) {\n        walls[0][i] = 1\n        walls[global.rc-1][i] = 1\n    }\n    for (let i = 0; i < global.rc; i++) {\n        walls[i][0] = 1\n        walls[i][global.cc-1] = 1\n    }\n\n    to_visit = shuffle(to_visit)\n\n    let rand_i = 2 * Math.floor(Math.random() * Math.floor( (global.rc-1) /2)) + 1\n    let rand_j = 2 * Math.floor(Math.random() * Math.floor( (global.cc-1) / 2)) + 1\n    /*\n    algorithm:\n    two dictionaries: current and completed\n    if i, j in current ever sees itself, backtrack\n    backtrack algorithm gets rid of all of the previously seen values and keeps going until it hits an element in \n    the completed set\n    join current and completed and reset current\n    */\n    let current = {}, complete = {}, order = [], res= []\n    let p, s, rand_value, temp, back_ret\n    q = []\n    rand_value = [rand_i, rand_j]\n    s = rand_value.toString()\n    complete[s] = rand_value\n    visited[rand_i][rand_j] = 1\n    // console.log(\"start \", rand_value, complete)\n    for (let i = 0; i < to_visit.length; i++) {\n        if (visited[ to_visit[i][0] ][ to_visit[i][1] ] != 0) {\n            // console.log(\"skip \", to_visit[i])\n            continue\n        } else {\n            // console.log(\"to visit: \", to_visit[i])\n            q.push(to_visit[i])\n            s = to_visit[i].toString()\n            current[s]= to_visit[i]\n            visited[to_visit[i][0]][to_visit[i][1]] = 1\n        }\n        while (q.length != 0) {\n            out = q.shift()\n            x = out[0]\n            y = out[1]\n            s = out.toString()\n            // console.log('out: ', out)\n            // if the popped value is in the complete set, then combine the two sets\n            if (s in complete) {\n                order =get_maze(x,y,visited)\n                res = res.concat(order.reverse())\n                complete = {...complete, ...current}\n                // console.log(\"completed at \", s, complete)\n                current = {}\n            // else the popped value is not in the complete set so keep searching\n            } else {\n\n                //TODO: disallow direction reversals\n                rand_value = random_adjacent(x, y, visited)\n                s = rand_value.toString()\n                // console.log(\"not in complete \", s, current, s in current)\n                temp = [x,y]\n                while (s in current) {\n                    // console.log(\"starting backtrack\")\n                    back_ret = backtrack(temp[0], temp[1], rand_value[0], rand_value[1], visited, current)\n                    visited = back_ret.v\n                    current = back_ret.c\n                    temp = rand_value // store this REPEATED value\n                    \n                    // HAVE TO MAKE SURE RAND_VALUE IS NOT IN CURRENT AS WELL\n                    rand_value = random_adjacent(temp[0], temp[1], visited) // get the NEW value\n                    s = rand_value.toString()\n                }\n                // console.log(rand_value[0], visited[temp[0]][temp[1]][0], rand_value[1], visited[temp[0]][temp[1]][1])\n                // if (rand_value[0] == visited[temp[0]][temp[1]][0] && rand_value[1] == visited[temp[0]][temp[1]][1]) {\n                //     console.log('ALERT!!!!!!!')\n                // }\n                visited[rand_value[0]][rand_value[1]] = temp // connect the REPEATED value to the NEW value    \n                current[s] = rand_value\n                q.push(rand_value)\n            }\n        }\n    }\n    maze.push(res[0])\n    let temp1,temp2, temp3\n    for (let i = 1; i < res.length; i++) {\n        temp1 = res[i-1]\n        temp2 = res[i]\n        // walls[temp1[0]][temp1[1]] = 0\n        // walls[temp2[0]][temp2[1]] = 0\n        if (temp1[0] == temp2[0]) {\n            temp3 = temp1[1] + temp2[1]\n            temp3 /= 2\n            maze.push([temp1[0], temp3])\n            walls[temp1[0]][temp3] = 0\n        } else {\n            temp3 = temp1[0] + temp2[0]\n            temp3 /= 2\n            maze.push([temp3, temp1[1]])\n            walls[temp3][temp1[1]] = 0\n        }\n        maze.push(res[i])\n    }\n\n\n    // console.log(set.extract())\n    let ret_walls = []\n    for (let i = 0; i < walls.length; i++) {\n        for (let j = 0; j < walls[0].length; j++) {\n            if (walls[i][j] == 1) {\n                ret_walls.push([i,j])\n            }\n        }\n    }\n    // console.log(ret_walls)\n\n    // // console.log(maze)\n    // // console.log( {\"maze\": maze, \"walls\": ret_walls})\n    return {\"maze\": maze, \"walls\": ret_walls}\n    \n}\n\nfunction get_maze(x, y, visited) {\n    let o = [[x,y]], temp\n    while (visited[x][y] != 1) {\n        temp = visited[x][y]\n        // console.log(x, y, temp)\n        o.push(visited[x][y])\n        x = temp[0]\n        y = temp[1]\n    }\n    return o\n}\n\nfunction backtrack(back_start_i, back_start_j, back_end_i, back_end_j, visited, current) {\n    let out, s\n    while (back_start_i != back_end_i || back_start_j != back_end_j) {\n        out = visited[back_start_i][back_start_j]\n        visited[back_start_i][back_start_j] = 0\n        s = [back_start_i, back_start_j].toString()\n        // console.log(current[s])\n        // console.log(\"backtracking \", back_start_i, back_start_j, back_end_i, back_end_j, out, visited[back_end_i][back_end_j])\n        delete current[s]\n        back_start_i = out[0]\n        back_start_j = out[1]\n    }\n    // console.log(\"backtracking STOP\", out, visited[back_end_i][back_end_j])\n    // console.log(visited[back_start_i][back_start_j])\n    return {v:visited, c:current}\n}\n\nfunction random_adjacent(x, y, visited){\n    let temp, prev, list = []\n    prev = visited[x][y]\n    // 2 directions to travel in \n    if (x == 1 && y == 1 || x==global.rc-2 && y == global.cc-2 || x == 1 && y == global.cc-2 || x== global.rc-2 && y == 1) {\n        if (x == 1 && y == 1) {\n            list = [[x+2,y], [x,y+2]]\n        } else if (x == global.rc-2 && y == global.cc-2){\n            list = [[x-2,y],[x,y-2]]\n        } else if (x == 1 && y==global.cc-2) {\n            list=[[x+2,y],[x,y-2]]\n        } else if (x==global.rc-2 && y ==1) {\n            list = [[x-2,y],[x,y+2]]\n        }\n    } else if (x == 1 || y == 1 || x == global.rc-2 || y == global.cc-2) {\n        // 3 directions to travel in\n        if (x == 1 || x == global.rc-2) {\n            x == 1? list.push([x+2,y]) : list.push([x-2,y])\n            list.push([x,y+2])\n            list.push([x,y-2])\n        } else {\n            y == 1? list.push([x,y+2]) : list.push([x,y-2])\n            list.push([x+2,y])\n            list.push([x-2,y])\n        }\n    } else {\n        // 4 directions to travel in\n        list = [[x+2,y],[x-2,y],[x,y-2],[x,y+2]]\n    }\n    list = shuffle(list)\n    if (list[0][0] == prev[0] && list[0][1] == prev[1]) {\n        // console.log(list[0], prev, \"SAME\", list[1])\n        // console.log(prev, [x,y], list[1])\n        return list[1]\n    } else {\n        // console.log(prev, [x,y], list[0])\n        return list[0]\n    }\n    /* DEBUG\n    start  [ 9, 29 ] { '9,29': [ 9, 29 ] }\n1 [ 15, 23 ]\n[ 15, 23 ] [ 15, 25 ]\n[ 15, 25 ] [ 17, 25 ]\n[ 17, 25 ] [ 17, 27 ]\n[ 17, 27 ] [ 15, 27 ]\n[ 15, 27 ] [ 13, 27 ]\n[ 13, 27 ] [ 13, 29 ]\nbacktracking  13 29 13 27 [ 13, 27 ]\n[ 13, 29 ] [ 13, 27 ]\n[ 13, 27 ] [ 13, 29 ]\n[ 13, 29 ] [ 13, 31 ]\n[ 13, 31 ] [ 11, 31 ]\n[ 11, 31 ] [ 9, 31 ]\n[ 9, 31 ] [ 9, 33 ]\n[ 9, 33 ] [ 9, 35 ]\nbacktracking  9 35 9 33 [ 9, 33 ]\n[ 9, 35 ] [ 9, 33 ]\n[ 9, 33 ] [ 11, 33 ]\nbacktracking  11 33 9 33 [ 9, 33 ]\n[ 11, 33 ] [ 9, 33 ]\n[ 9, 33 ] [ 11, 33 ]\nbacktracking  11 33 11 31 [ 9, 33 ]\nbacktracking  9 33 11 31 [ 11, 33 ]\nbacktracking  11 33 11 31 0\n    */\n\n}\n\n// get random item from object\nfunction random_property (obj) {\n    var keys = Object.keys(obj);\n    return obj[keys[ keys.length * Math.random() << 0]];\n};\n\n\nfunction initialize_visited(row_count, col_count) {\n\tvar visited = new Array(row_count)\n\tfor (let i = 0; i < row_count; i++) {\n\t\tvisited[i] = new Array(col_count).fill(0)\n\t}\n\treturn visited\n}\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (let i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}"]},"metadata":{},"sourceType":"module"}