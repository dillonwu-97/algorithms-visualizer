{"ast":null,"code":"import React from 'react';\nimport { find_next_cell, is_valid } from './lib';\nimport '../sudoku_global';\n/******************* Testing function ********************/\n// test = [[0,0,5,3,0,0,0,0,0],\n// [8,0,0,0,0,0,0,2,0],\n// [0,7,0,0,1,0,5,0,0],\n// [4,0,0,0,0,5,3,0,0],\n// [0,1,0,0,7,0,0,0,6],\n// [0,0,3,2,0,0,0,8,0],\n// [0,6,0,5,0,0,0,0,9],\n// [0,0,4,0,0,0,0,3,0],\n// [0,0,0,0,0,9,7,0,0]]\n// val = backtrack_bruteforce(test, 0, 0)\n// for (let i = 0; i < 9; i++) {\n//     console.log(test[i].toString())\n// }\n// console.log(global.backtrack_count, val)\n\nexport default function backtrack_bruteforce(grid) {\n  // function backtrack_bruteforce(grid) {\n  let i, j, ret;\n  ret = find_next_cell(grid);\n  i = ret[0];\n  j = ret[1];\n\n  if (i == -1) {\n    return true;\n  }\n\n  for (let e = 1; e < 10; e++) {\n    if (is_valid(grid, i, j, e)) {\n      grid[i][j] = e; // console.log(i,j,e)\n\n      global.values.push([i, j, e]);\n\n      if (backtrack_bruteforce(grid, i, j)) {\n        return true;\n      }\n\n      grid[i][j] = 0; // console.log(i,j,e)\n\n      global.values.push([i, j, 0, 1]);\n      global.backtrack_count++;\n    }\n  }\n\n  return false;\n}\n/*\n[[ 5,3,0,0,7,0,0,0,0 ],  \n[ 6,0,0,1,9,5,0,0,0 ],  \n[ 0,9,8,0,0,0,0,6,0],  \n[ 8,0,0,0,6,0,0,0,3],  \n[ 4,0,0,8,0,3,0,0,1 ],  \n[ 7,0,0,0,2,0,0,0,6 ],  \n[ 0,6,0,0,0,0,2,8,0 ],  \n[ 0,0,0,4,1,9,0,0,5 ],  \n[ 0,0,0,0,8,0,0,7,9]]\n*/","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/sudoku/sudoku_algorithms/backtrack_bruteforce.js"],"names":["React","find_next_cell","is_valid","backtrack_bruteforce","grid","i","j","ret","e","global","values","push","backtrack_count"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,kBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACnD;AACI,MAAIC,CAAJ,EAAQC,CAAR,EAAWC,GAAX;AACAA,EAAAA,GAAG,GAAGN,cAAc,CAACG,IAAD,CAApB;AACAC,EAAAA,CAAC,GAAGE,GAAG,CAAC,CAAD,CAAP;AACAD,EAAAA,CAAC,GAAGC,GAAG,CAAC,CAAD,CAAP;;AACA,MAAIF,CAAC,IAAI,CAAC,CAAV,EAAa;AACT,WAAO,IAAP;AACH;;AACD,OAAK,IAAIG,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIN,QAAQ,CAACE,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaE,CAAb,CAAZ,EAA8B;AAC1BJ,MAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,IAAaE,CAAb,CAD0B,CAE1B;;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,CAACN,CAAD,EAAGC,CAAH,EAAKE,CAAL,CAAnB;;AACA,UAAIL,oBAAoB,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,CAAxB,EAAsC;AAClC,eAAO,IAAP;AACH;;AACDF,MAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,IAAa,CAAb,CAP0B,CAQ1B;;AACAG,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,CAACN,CAAD,EAAGC,CAAH,EAAK,CAAL,EAAQ,CAAR,CAAnB;AACAG,MAAAA,MAAM,CAACG,eAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;AAGD","sourcesContent":["import React from 'react'\nimport {find_next_cell, is_valid} from './lib'\nimport '../sudoku_global'\n\n/******************* Testing function ********************/\n// test = [[0,0,5,3,0,0,0,0,0],\n// [8,0,0,0,0,0,0,2,0],\n// [0,7,0,0,1,0,5,0,0],\n// [4,0,0,0,0,5,3,0,0],\n// [0,1,0,0,7,0,0,0,6],\n// [0,0,3,2,0,0,0,8,0],\n// [0,6,0,5,0,0,0,0,9],\n// [0,0,4,0,0,0,0,3,0],\n// [0,0,0,0,0,9,7,0,0]]\n\n// val = backtrack_bruteforce(test, 0, 0)\n// for (let i = 0; i < 9; i++) {\n//     console.log(test[i].toString())\n// }\n// console.log(global.backtrack_count, val)\n\nexport default function backtrack_bruteforce(grid) {\n// function backtrack_bruteforce(grid) {\n    let i , j, ret\n    ret = find_next_cell(grid)\n    i = ret[0]\n    j = ret[1]\n    if (i == -1) {\n        return true\n    }\n    for (let e= 1; e < 10; e++) {\n        if (is_valid(grid, i, j, e) ) {\n            grid[i][j] = e\n            // console.log(i,j,e)\n            global.values.push([i,j,e])\n            if (backtrack_bruteforce(grid, i, j)) {\n                return true\n            } \n            grid[i][j] = 0\n            // console.log(i,j,e)\n            global.values.push([i,j,0, 1])\n            global.backtrack_count ++;\n        }\n    }\n    return false\n}   \n\n\n/*\n[[ 5,3,0,0,7,0,0,0,0 ],  \n[ 6,0,0,1,9,5,0,0,0 ],  \n[ 0,9,8,0,0,0,0,6,0],  \n[ 8,0,0,0,6,0,0,0,3],  \n[ 4,0,0,8,0,3,0,0,1 ],  \n[ 7,0,0,0,2,0,0,0,6 ],  \n[ 0,6,0,0,0,0,2,8,0 ],  \n[ 0,0,0,4,1,9,0,0,5 ],  \n[ 0,0,0,0,8,0,0,7,9]]\n*/"]},"metadata":{},"sourceType":"module"}