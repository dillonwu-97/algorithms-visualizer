{"ast":null,"code":"import React from'react';import'../../setup/global';export default function random_maze(){// create setup to check adjacencies\nvar visited=initialize_visited(global.rc,global.cc);var maze=[];// build the maze\n// can transform shape of map by changing value for this\nfor(var i=0;i<global.rc;i++){for(var j=0;j<global.cc;j++){if(Math.random()>.15){if(check_adjacencies(i,j,visited)){visited[i][j]=1;}// visited[i][j]=1\n}}}// make sure there are no islands\nfor(var _i=0;_i<global.cc;_i++){maze.push([0,_i]);maze.push([global.rc-1,_i]);visited[0][_i]=1;visited[global.rc-1][_i]=1;}for(var _i2=0;_i2<global.rc;_i2++){maze.push([_i2,0]);maze.push([_i2,global.cc-1]);visited[_i2][0]=1;visited[_i2][global.cc-1]=1;}// this is not changing\nfor(var _i3=0;_i3<2;_i3++){visited=remove_islands(visited);visited=remove_islands_edge(visited);// console.log(visited)\n}// for some reason, there is always something blocked on the last row so i'm just going to get rid of it\nfor(var _i4=1;_i4<global.cc-1;_i4++){if(Math.random()>.15){visited[global.rc-2][_i4]=0;}// visited[global.rc-2][i] = 0\n}visited=remove_islands_edge(visited);// remove islands using second idea: tracing the walls to see if they touch\nfor(var _i5=1;_i5<global.rc-1;_i5++){for(var _j=1;_j<global.cc-1;_j++){if(visited[_i5][_j]==1){maze.push([_i5,_j]);}}}return maze;}// new strategy: \n// go along each edge of the graph and if you ever hit an edge, then create an opening?\nfunction remove_islands_edge(visited){var q=[];var out,out_i,out_j,temp_i,temp_j,x,y;var right_left_walls=[1,global.cc-2];var top_down_walls=[1,global.rc-2];// for \nvar checked=initialize_visited(global.rc,global.cc);for(var j=1;j>-1;j--){for(var i=1;i<global.cc-1;i++){// console.log(\"i is: \", i)\nif(visited[top_down_walls[j]][i]==1&&checked[top_down_walls[j]][i]==0){q.push([top_down_walls[j],i]);while(q.length!=0){out=q.shift();out_i=out[0];out_j=out[1];// console.log(out_i, out_j, checked[out_i][out_j])\n// condition: cannot be adjacent to each other\n// wall detection mechanism\nif(out_j in right_left_walls||out_i in top_down_walls){if(Math.abs(i-out_j)>0||Math.abs(top_down_walls[j]-out_i)>0){// console.log(\"breakpoint \", out_i, out_j)\nx=out_i;y=out_j;// console.log (\"wtf \", y)\nwhile(y>0&&visited[x][y]==1){visited[x][y]=0;y-=1;}while(x>0&&visited[x][out_j]==1){visited[x][out_j]=0;x-=1;}x=out_i;while(out_j<global.cc&&visited[x][out_j]==1){visited[x][out_j]=0;out_j+=1;}while(out_i<global.rc&&visited[out_i][out_j]==1){visited[out_j][out_j]=0;out_i+=1;}visited[top_down_walls[j]][i]=0;}}// add all adjacents including diagonals\nfor(var _x=-1;_x<2;_x++){for(var _y=-1;_y<2;_y++){temp_i=out_i+_x;temp_j=out_j+_y;if(visited[temp_i][temp_j]==1&&checked[temp_i][temp_j]==0&&temp_i!=0&&temp_j!=0&&temp_i!=global.rc-1&&temp_j!=global.cc-1){q.push([temp_i,temp_j]);checked[temp_i][temp_j]=1;}}}}}}}return visited;}function remove_islands(visited){var q=[];// using push and shift\nvar out;var out_i;var out_j;var checked=initialize_visited(global.rc,global.cc);for(var i=0;i<global.rc;i++){for(var j=0;j<global.cc;j++){if(checked[i][j]==0&&visited[i][j]==0){q.push([i,j]);while(q.length!=0){// console.log(visited)\nout=q.shift();out_i=out[0];out_j=out[1];if(out_i>0&&checked[out_i-1][out_j]==0&&visited[out_i-1][out_j]==0){q.push([out_i-1,out_j]);checked[out_i-1][out_j]=1;}if(out_j>0&&checked[out_i][out_j-1]==0&&visited[out_i][out_j-1]==0){q.push([out_i,out_j-1]);checked[out_i][out_j-1]=1;}if(out_i<global.rc-1&&checked[out_i+1][out_j]==0&&visited[out_i+1][out_j]==0){q.push([out_i+1,out_j]);checked[out_i+1][out_j]=1;}if(out_j<global.cc-1&&checked[out_i][out_j+1]==0&&visited[out_i][out_j+1]==0){q.push([out_i,out_j+1]);checked[out_i][out_j+1]=1;}// console.log(visited)\n// console.log(checked)\n}// console.log(out_i, out_j)\n// drill until you hit a 0 or are out of range\n// need to make sure it is not drilling the borders\nvar o=void 0;if(out_i+1<global.rc-2&&visited[out_i+1][out_j]==1){o=drill(out_i+1,out_j,visited,checked);}else if(out_i-1>1&&visited[out_i-1][out_j]==1){o=drill(out_i-1,out_j,visited,checked);}else if(out_j+1<global.cc-2&&visited[out_i][out_j+1]==1){o=drill(out_i,out_j+1,visited,checked);}else if(out_j-1>1&&visited[out_i][out_j-1]==1){o=drill(out_i,out_j-1,visited,checked);}if(o!==undefined){visited=o.visited;checked=o.checked;}// console.log(o)\n}}}return visited;}function drill(i,j,visited,checked){visited[i][j]=1;while(i<global.rc-1&&visited[i][j]==1){// console.log(\"row \", i, j)\nvisited[i][j]=0;checked[i][j]=0;i+=1;}visited[i][j]=1;while(j<global.cc-1&&visited[i][j]==1){// console.log(\"column \", i,j)\nvisited[i][j]=0;checked[i][j]=0;j+=1;}// while(i > 0 && visited[i][j] == 1) {\n//     console.log(\"row \", i, j)\n//     visited[i][j] = 0\n//     i-=1\n// }\n// visited[i][j] = 1\n// while(j < 0 && visited[i][j] == 1) {\n//     console.log(\"column \", i,j)\n//     visited[i][j] = 0\n//     j-=1\n// }\nvar o={visited:visited,checked:checked};return o;}// transform shape of map by changing the values for this\nfunction check_adjacencies(row,col,visited){var count=0;for(var i=-1;i<2;i++){for(var j=-1;j<2;j++){try{if(i==-1&&j==-1||i==1&&j==-1||i==1&&j==1||i==-1&&j==1){if(visited[row+i][col+j]==1){count+=2;}}else if(visited[row+i][col+j]==1){count+=1;}// console.log(count)\n}catch(_unused){count+=1;}if(count>4){return false;}}}return true;}function initialize_visited(row_count,col_count){var visited=new Array(row_count);for(var i=0;i<row_count;i++){visited[i]=new Array(col_count).fill(0);}return visited;}","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/algorithms/maze_algs/random_maze.js"],"names":["React","random_maze","visited","initialize_visited","global","rc","cc","maze","i","j","Math","random","check_adjacencies","push","remove_islands","remove_islands_edge","q","out","out_i","out_j","temp_i","temp_j","x","y","right_left_walls","top_down_walls","checked","length","shift","abs","o","drill","undefined","row","col","count","row_count","col_count","Array","fill"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../../setup/global'\n\nexport default function random_maze() {\n    // create setup to check adjacencies\n    let visited = initialize_visited(global.rc, global.cc);\n    let maze = []\n    // build the maze\n    // can transform shape of map by changing value for this\n    for (let i = 0; i < global.rc; i++) {\n        for (let j = 0; j < global.cc; j++) {\n            if (Math.random() > .15) {\n                if (check_adjacencies(i, j, visited)) {\n                    visited[i][j] = 1\n                }\n                // visited[i][j]=1\n            }\n        }\n    }\n\n    // make sure there are no islands\n\n    for (let i = 0; i < global.cc; i++) {\n        maze.push([0,i])\n        maze.push([global.rc-1,i])\n        visited[0][i] = 1\n        visited[global.rc-1][i] = 1\n    }\n    for (let i = 0; i < global.rc; i++) {\n        maze.push([i, 0])\n        maze.push([i, global.cc-1])\n        visited[i][0] = 1\n        visited[i][global.cc-1] = 1\n    }\n\n    // this is not changing\n    for (let i = 0; i < 2; i++) {\n        visited = remove_islands(visited)\n        visited = remove_islands_edge(visited)\n        // console.log(visited)\n    }\n    // for some reason, there is always something blocked on the last row so i'm just going to get rid of it\n    for (let i = 1; i < global.cc-1; i++) {\n        if (Math.random() > .15) {\n            visited[global.rc-2][i] = 0\n        }\n            // visited[global.rc-2][i] = 0\n    }\n    visited = remove_islands_edge(visited)\n\n    // remove islands using second idea: tracing the walls to see if they touch\n\n    \n    for (let i = 1; i < global.rc-1; i++) {\n        for (let j = 1; j < global.cc-1; j++) {\n            if(visited[i][j] == 1) {\n                maze.push([i,j])\n            }\n        }\n    }\n    \n    return maze\n}\n\n// new strategy: \n// go along each edge of the graph and if you ever hit an edge, then create an opening?\nfunction remove_islands_edge (visited) {\n    let q = []\n    let out, out_i, out_j, temp_i, temp_j, x, y;\n    let right_left_walls = [1, global.cc-2]\n    let top_down_walls = [1, global.rc-2]\n\n    // for \n    let checked = initialize_visited(global.rc, global.cc)\n    for (let j = 1; j > -1; j--) {        \n        for (let i = 1; i < global.cc-1; i++) {\n            // console.log(\"i is: \", i)\n            if (visited[top_down_walls[j]][i] == 1 && checked[top_down_walls[j]][i] == 0) {\n                q.push([top_down_walls[j],i])\n                while (q.length != 0) {\n                    out = q.shift()\n                    out_i = out[0]\n                    out_j = out[1]\n                    // console.log(out_i, out_j, checked[out_i][out_j])\n                    // condition: cannot be adjacent to each other\n                    // wall detection mechanism\n                    if (out_j in right_left_walls || out_i in top_down_walls) {\n                        if (Math.abs(i - out_j) > 0 || Math.abs(top_down_walls[j] -out_i) > 0) {\n                            // console.log(\"breakpoint \", out_i, out_j)\n                            \n                            x = out_i\n                            y = out_j\n                            // console.log (\"wtf \", y)\n                            while (y > 0 && visited[x][y] == 1) {\n                                visited[x][y] = 0\n                                y-=1\n                            }\n                            while (x > 0 && visited[x][out_j] == 1) {\n                                visited[x][out_j] = 0\n                                x-=1\n                            }\n                            x = out_i\n                            while (out_j < global.cc && visited[x][out_j] == 1) {\n                                visited[x][out_j] = 0\n                                out_j+=1\n                            }\n                            while (out_i < global.rc && visited[out_i][out_j] == 1) {\n                                visited[out_j][out_j] = 0\n                                out_i+=1\n                            }\n                            visited[top_down_walls[j]][i] = 0\n                        }\n                    }\n                    // add all adjacents including diagonals\n                    for (let x = -1; x < 2; x++) {\n                        for (let y = -1; y < 2; y++) {\n                            temp_i = out_i + x\n                            temp_j = out_j + y\n                            if (visited[temp_i][temp_j] == 1 && checked[temp_i][temp_j] == 0 && temp_i != 0 && temp_j != 0 && temp_i != global.rc-1 && temp_j!=global.cc-1) {\n                                q.push([temp_i,temp_j])\n                                checked[temp_i] [temp_j] = 1\n                            } \n                        }\n                    }\n                }\n            }\n        }\n    }\n    return visited\n}\n\nfunction remove_islands(visited) {\n\tlet q = [] // using push and shift\n    let out; \n    let out_i;\n    let out_j;\n    let checked = initialize_visited(global.rc, global.cc)\n    for (let i = 0; i < global.rc; i++) {\n        for (let j = 0; j < global.cc; j++) {\n            if (checked[i][j] == 0 && visited[i][j] == 0) {  \n                q.push([i, j])\n                while (q.length!=0) {\n                    // console.log(visited)\n                    out = q.shift()\n                    out_i = out[0]\n                    out_j = out[1]\n                    if (out_i > 0 && checked[out_i-1][out_j] == 0 && visited[out_i-1][out_j] == 0) {\n                        q.push([out_i-1, out_j])\n                        checked[out_i-1][out_j] = 1\n                    }\n                    if (out_j > 0 && checked[out_i][out_j-1] == 0 && visited[out_i][out_j-1] == 0) {\n                        q.push([out_i, out_j-1])\n                        checked[out_i][out_j-1] = 1\n                    }\n                    if (out_i < global.rc-1 && checked[out_i+1][out_j] == 0 && visited[out_i+1][out_j] == 0) {\n                        q.push([out_i+1, out_j])\n                        checked[out_i+1][out_j] = 1\n                    }\n                    if (out_j < global.cc-1 && checked[out_i][out_j+1] == 0 && visited[out_i][out_j+1] == 0) {\n                        q.push([out_i, out_j+1])\n                        checked[out_i][out_j+1] = 1\n                    }    \n                    // console.log(visited)\n                    // console.log(checked)\n                }\n                // console.log(out_i, out_j)\n                // drill until you hit a 0 or are out of range\n                // need to make sure it is not drilling the borders\n\n                let o;\n                if (out_i+1 < global.rc-2 && visited[out_i+1][out_j] == 1) {\n                    o = drill (out_i+1, out_j, visited, checked)\n                } else if (out_i-1 > 1 && visited[out_i-1][out_j]==1){\n                    o = drill (out_i-1, out_j, visited, checked)\n                } else if (out_j+1 < global.cc-2 && visited[out_i][out_j+1] == 1) {\n                    o = drill (out_i, out_j+1, visited, checked)\n                } else if (out_j-1 > 1 && visited[out_i][out_j-1] == 1) {\n                    o = drill (out_i, out_j-1, visited, checked)\n                }\n                if (o !== undefined) {\n                    visited = o.visited\n                    checked = o.checked\n                }\n                // console.log(o)\n\n                \n            }\n        }\n    }\n    return visited\n\n}\n\nfunction drill(i, j,visited, checked) {\n\n    visited[i][j] = 1\n    while(i < global.rc-1 && visited[i][j] == 1) {\n        // console.log(\"row \", i, j)\n        visited[i][j] = 0\n        checked[i][j] = 0\n        i+=1\n    }\n    visited[i][j] = 1\n    while(j < global.cc-1 && visited[i][j] == 1) {\n        // console.log(\"column \", i,j)\n        visited[i][j] = 0\n        checked[i][j] = 0\n        j+=1\n    }\n    // while(i > 0 && visited[i][j] == 1) {\n    //     console.log(\"row \", i, j)\n    //     visited[i][j] = 0\n    //     i-=1\n    // }\n    // visited[i][j] = 1\n    // while(j < 0 && visited[i][j] == 1) {\n    //     console.log(\"column \", i,j)\n    //     visited[i][j] = 0\n    //     j-=1\n    // }\n    let o = {visited, checked}\n    return o\n}\n\n\n// transform shape of map by changing the values for this\nfunction check_adjacencies(row, col, visited) {\n    let count = 0\n    \n    for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n            try {\n                if (i==-1 && j == -1 || i == 1 && j == -1 || i==1 && j==1 || i==-1&&j==1) {\n                    if (visited[row+i][col+j] == 1) {\n                        count +=2;\n                    }\n                } else if (visited[row + i][col + j] == 1) {\n                    count+=1;\n                }\n                // console.log(count)\n            } catch {\n                count +=1;\n            }\n            if (count >4) {\n                return false\n            }\n        }\n    }\n    return true\n\n}\n\nfunction initialize_visited(row_count, col_count) {\n\tvar visited = new Array(row_count)\n\tfor (let i = 0; i < row_count; i++) {\n\t\tvisited[i] = new Array(col_count).fill(0)\n\t}\n\treturn visited\n}\n"]},"metadata":{},"sourceType":"module"}