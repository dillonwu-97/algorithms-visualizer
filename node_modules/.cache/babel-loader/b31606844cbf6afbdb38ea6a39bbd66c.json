{"ast":null,"code":"import _classCallCheck from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Cell from'./cell/cell';import'./make_grid.css';import Bfs from'../algorithms/path_algs/bfs';import Dfs from'../algorithms/path_algs/dfs';import greedy from'../algorithms/path_algs/greedy';import astar from'../algorithms/path_algs/astar';import dijkstra from'../algorithms/path_algs/dijkstra';import'./cell/cell.css';import random_maze from'../algorithms/maze_algs/random_maze';import random_kruskal from'../algorithms/maze_algs/random_kruskal';import random_prims from'../algorithms/maze_algs/random_prims';import wilson from'../algorithms/maze_algs/wilson';import'./global';import{Dropdown,DropdownButton}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import'jquery/dist/jquery.min.js';import'bootstrap/dist/js/bootstrap.min.js';import'bootstrap/dist/css/bootstrap.min.css';var row_count=global.rc;// TODO: allow for user to input these values\nvar col_count=global.cc;var start_i=15;var start_j=20;var end_i=15;var end_j=30;// for now, create walls that are hard coded and then color them in\nvar walls=[];var make_grid=/*#__PURE__*/function(_Component){_inherits(make_grid,_Component);var _super=_createSuper(make_grid);function make_grid(props){var _this;_classCallCheck(this,make_grid);_this=_super.call(this);_this.state={start_end:0// keeps track of start (0) or end (1)\n};_this.handleSearch=_this.handleSearch.bind(_assertThisInitialized(_this));_this.startEnd=_this.startEnd.bind(_assertThisInitialized(_this));_this.createWall=_this.createWall.bind(_assertThisInitialized(_this));_this.reset=_this.reset.bind(_assertThisInitialized(_this));_this.make_maze=_this.make_maze.bind(_assertThisInitialized(_this));_this.dark_maze=_this.dark_maze.bind(_assertThisInitialized(_this));return _this;}/************************** General Use Methods **************************/ // create a cell\n_createClass(make_grid,[{key:\"create_cell\",value:function create_cell(){var cell={type:\"\",weight:1};return cell;}/************************* Pathfinding Methods *************************/ // runs bfs and returns the nodes visited path and backtrack path\n},{key:\"handleSearch\",value:function handleSearch(start_i,start_j,end_i,end_j,walls,algorithm){var _this2=this;for(var i=0;i<walls.length;i++){walls[i]=walls[i].toString();}var walls_unique=Array.from(new Set(walls));// run bfs\nvar ret;switch(algorithm){case\"bfs\":// console.log(start_i, \" \", start_j)\nret=Bfs(start_i,start_j,end_i,end_j,walls_unique);break;case\"dfs\":// console.log(\"dfs switch case\")\nret=Dfs(start_i,start_j,end_i,end_j,walls_unique);break;case\"greedy\":// console.log(\"greedy\")\nret=greedy(start_i,start_j,end_i,end_j,walls_unique);break;case\"astar\":ret=astar(start_i,start_j,end_i,end_j,walls_unique);break;case\"dijkstra\":ret=dijkstra(start_i,start_j,end_i,end_j,walls_unique);break;}this.reset_paths();var wait_time=this.animate_pathfind(ret);// console.log(wait_time)\nif(ret[ret.length-1][0][0]!=undefined){// console.log(algorithm, \" \", ret[ret.length-1].length)\nsetTimeout(function(){_this2.animate_backtrack(ret[ret.length-1]);},wait_time);}}/************************* Animation Methods *************************/ // pathfinding animation\n},{key:\"animate_pathfind\",value:function animate_pathfind(path){var _loop=function _loop(i){var x=path[i][0];var y=path[i][1];var str='cell-'+x+'-'+y;if(document.getElementById(str).className=='cell cell-start'){// if (x == start_i && y == start_j) {\n// document.getElementById(str).className = 'cell cell-start'\nreturn\"continue\";}if(document.getElementById(str).className=='cell cell-finish'){// if (x == end_i && y == end_j) {\n// document.getElementById(str).className = 'cell cell-finish'\nreturn\"continue\";}// if (x == 15 && y == 20 || x == 15 && y==30) {\n// \tconsole.log(\"debugging \", document.getElementById(str).className)\n// }\n// if (document.getElementById(str).className== 'cell ') {\n// for some reason, having a console.log makes the color change, but not having this doesnt\n// if (x == 15 && y == 20 || x == 15 && y==30) {\n// \tconsole.log(\"debugging \", document.getElementById(str).className, \" \", x, \" \", y)\n// }\nsetTimeout(function(){document.getElementById(str).className='cell cell-visited';// this.animate_backtrack(path[ path.length - 1])\n},10*i);// }\n};// length is path - 1 because the last element of the input is the array for backtrack steps\nfor(var i=0;i<path.length-1;i++){var _ret=_loop(i);if(_ret===\"continue\")continue;}return 10*path.length;}// backtrack animation\n},{key:\"animate_backtrack\",value:function animate_backtrack(path){var _loop2=function _loop2(i){var x=path[i][0];var y=path[i][1];if(x==start_i&&y==start_j){return\"continue\";}if(x==end_i&&y==end_j){return\"continue\";}// console.log(x, y)\nvar str='cell-'+x+'-'+y;setTimeout(function(){document.getElementById(str).className='cell cell-backtrack';},50*i);};for(var i=0;i<path.length;i++){var _ret2=_loop2(i);if(_ret2===\"continue\")continue;}}},{key:\"animate_maze\",value:function animate_maze(){var _loop3=function _loop3(i){var str='cell-'+walls[i][0]+'-'+walls[i][1];setTimeout(function(){document.getElementById(str).className='cell cell-wall';},5*i);};for(var i=0;i<walls.length;i++){_loop3(i);}}},{key:\"dark_animate_maze\",value:function dark_animate_maze(maze){var _loop4=function _loop4(i){var str='cell-'+maze[i][0]+'-'+maze[i][1];setTimeout(function(){document.getElementById(str).className='cell ';},5*i);};for(var i=0;i<maze.length;i++){_loop4(i);}}/****************************** Generate Walls *************************/},{key:\"createWall\",value:function createWall(event){if(event.shiftKey){var id=event.currentTarget.id;// row and col are not returned for this\nvar r=parseInt(document.getElementById(id).getAttribute(\"row\"));var c=parseInt(document.getElementById(id).getAttribute(\"col\"));document.getElementById(id).className='cell cell-wall';var a=id.split(\"-\")[1];var b=id.split(\"-\")[2];// console.log(a,b)\nwalls.push([a,b]);}}},{key:\"make_maze\",value:function make_maze(){this.reset();walls=random_maze();this.animate_maze();}},{key:\"dark_maze\",value:function dark_maze(maze_type){var out;this.darken();switch(maze_type){case\"kruskal\":out=random_kruskal();break;case\"prim\":out=random_prims();break;case\"wilson\":out=wilson();break;}walls=out.walls;this.dark_animate_maze(out.maze);}/****************************** Mouse Click Methods *************************/},{key:\"startEnd\",value:function startEnd(event){// TODO;\n// disallow clicking of walls\nvar id=event.currentTarget.id;// row and col are not returned for this\nvar r=parseInt(document.getElementById(id).getAttribute(\"row\"));var c=parseInt(document.getElementById(id).getAttribute(\"col\"));if(this.state.start_end==0){// reset the start colors\ndocument.getElementById('cell-'+start_i+'-'+start_j).className='cell ';document.getElementById(id).className='cell cell-start';this.setState({start_end:1});start_i=r;start_j=c;}else{document.getElementById('cell-'+end_i+'-'+end_j).className='cell ';document.getElementById(id).className='cell cell-finish';this.setState({start_end:0});end_i=r;end_j=c;}}// darkens the entire grid\n},{key:\"darken\",value:function darken(){for(var i=0;i<row_count;i++){for(var j=0;j<col_count;j++){var id='cell-'+i+'-'+j;document.getElementById(id).className='cell cell-wall';}}}// clears the entire grid\n},{key:\"reset\",value:function reset(){for(var i=0;i<row_count;i++){for(var j=0;j<col_count;j++){var id='cell-'+i+'-'+j;document.getElementById(id).className='cell ';}}}// keeps the walls; resets the path colors\n},{key:\"reset_paths\",value:function reset_paths(){for(var i=0;i<row_count;i++){for(var j=0;j<col_count;j++){var id='cell-'+i+'-'+j;if(document.getElementById(id).className=='cell cell-visited'||document.getElementById(id).className=='cell cell-backtrack'){document.getElementById(id).className='cell ';}}}}/****************************** Rendering *************************/},{key:\"render\",value:function render(){var _this3=this;// setup for grid\nvar grid=[];for(var i=0;i<row_count;i++){var temp=[];for(var j=0;j<col_count;j++){temp.push(0);}grid.push(temp);}var maze_list=[\"kruskal\",\"prim\",\"wilson\"];var alg_list=[\"bfs\",\"dfs\",\"greedy\",\"astar\",\"dijkstra\"];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},grid.map(function(row,row_index){return/*#__PURE__*/React.createElement(\"div\",null,row.map(function(col,col_index){var cell=_this3.create_cell();var type=cell.type,weight=cell.weight;if(row_index==start_i&&col_index==start_j){type='cell-start';}else if(row_index==end_i&&col_index==end_j){type='cell-finish';}return/*#__PURE__*/React.createElement(Cell,{element_id:'cell-'+row_index+'-'+col_index,type:type,weight:weight,row:row_index,col:col_index,onMouseMove:_this3.createWall,onClick:_this3.startEnd});}));})),/*#__PURE__*/React.createElement(\"div\",null,\"\\\" \\\"\"),/*#__PURE__*/React.createElement(\"div\",{class:\"container\"},/*#__PURE__*/React.createElement(\"div\",{id:\"pathfinder-dropdown\",class:\"row text-center\"},/*#__PURE__*/React.createElement(\"div\",{class:\"col-4\"},/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn btn-secondary dropdown-toggle\",className:\"algorithms-button\",type:\"button\",id:\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"},\"Select Algorithm\"),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-menu\",\"aria-labelledby\":\"dropdownMenuButton\"},alg_list.map(function(alg){// console.log(typeof(alg))\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{class:\"dropdown-item\",className:\"algorithms-menu\",onClick:function onClick(){return _this3.handleSearch(start_i,start_j,end_i,end_j,walls,alg);}},\"Visualize \",alg),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-divider\"}));})))),/*#__PURE__*/React.createElement(\"div\",{class:\"col-4\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",class:\"btn btn-outline-secondary\",className:\"btn-xlarge\",id:\"reset button\",onClick:function onClick(){return _this3.reset();}},\"Reset\")),/*#__PURE__*/React.createElement(\"div\",{class:\"col-4\"},/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn btn-secondary dropdown-toggle\",className:\"maze-button\",type:\"button\",id:\"dropdownMenuButton\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"},\"Select Maze\"),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-menu\",\"aria-labelledby\":\"dropdownMenuButton\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{class:\"dropdown-item\",className:\"maze-menu\",onClick:this.make_maze},\"General Maze\"),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-divider\"})),maze_list.map(function(maze){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{class:\"dropdown-item\",className:\"maze-menu\",onClick:function onClick(){return _this3.dark_maze(maze);}},maze,\" maze\"),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-divider\"}));})))))));}}]);return make_grid;}(Component);export{make_grid as default};","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/setup/make_grid.js"],"names":["React","Component","Cell","Bfs","Dfs","greedy","astar","dijkstra","random_maze","random_kruskal","random_prims","wilson","Dropdown","DropdownButton","row_count","global","rc","col_count","cc","start_i","start_j","end_i","end_j","walls","make_grid","props","state","start_end","handleSearch","bind","startEnd","createWall","reset","make_maze","dark_maze","cell","type","weight","algorithm","i","length","toString","walls_unique","Array","from","Set","ret","reset_paths","wait_time","animate_pathfind","undefined","setTimeout","animate_backtrack","path","x","y","str","document","getElementById","className","maze","event","shiftKey","id","currentTarget","r","parseInt","getAttribute","c","a","split","b","push","animate_maze","maze_type","out","darken","dark_animate_maze","setState","j","grid","temp","maze_list","alg_list","map","row","row_index","col","col_index","create_cell","alg"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport Cell from './cell/cell'\nimport './make_grid.css'\nimport Bfs from '../algorithms/path_algs/bfs'\nimport Dfs from '../algorithms/path_algs/dfs'\nimport greedy from '../algorithms/path_algs/greedy'\nimport astar from '../algorithms/path_algs/astar'\nimport dijkstra from '../algorithms/path_algs/dijkstra'\nimport './cell/cell.css'\nimport random_maze from '../algorithms/maze_algs/random_maze'\nimport random_kruskal from '../algorithms/maze_algs/random_kruskal'\nimport random_prims from '../algorithms/maze_algs/random_prims'\nimport wilson from '../algorithms/maze_algs/wilson'\nimport './global'\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst row_count = global.rc // TODO: allow for user to input these values\nconst col_count = global.cc\n\nlet start_i = 15\nlet start_j = 20\n\nlet end_i = 15\nlet end_j = 30\n\n// for now, create walls that are hard coded and then color them in\nlet walls = []\n\n\nexport default class make_grid extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tstart_end: 0 // keeps track of start (0) or end (1)\n\t\t}\n\t\tthis.handleSearch = this.handleSearch.bind(this)\n\t\tthis.startEnd = this.startEnd.bind(this)\n\t\tthis.createWall = this.createWall.bind(this)\n\t\tthis.reset = this.reset.bind(this)\n\t\tthis.make_maze = this.make_maze.bind(this)\n\t\tthis.dark_maze = this.dark_maze.bind(this)\n\t}\n\n\t/************************** General Use Methods **************************/\n\t// create a cell\n\tcreate_cell () {\n\t\tconst cell = {\n\t\t\ttype: \"\",\n\t\t\tweight: 1\n\t\t}\n\t\treturn cell\n\t}\n\n\t/************************* Pathfinding Methods *************************/\n\t// runs bfs and returns the nodes visited path and backtrack path\n\n\thandleSearch(start_i, start_j, end_i, end_j, walls, algorithm) {\n\t\tfor (let i = 0; i < walls.length; i++) {\n\t\t\twalls[i] = walls[i].toString()\n\t\t}\n\t\tlet walls_unique = Array.from(new Set(walls));\n\t\t// run bfs\n\t\tlet ret;\n\t\tswitch (algorithm) {\n\t\t\tcase \"bfs\":\n\t\t\t\t// console.log(start_i, \" \", start_j)\n\t\t\t\tret = Bfs(start_i, start_j, end_i, end_j, walls_unique)\n\t\t\t\tbreak\n\t\t\tcase \"dfs\":\n\t\t\t\t// console.log(\"dfs switch case\")\n\t\t\t\tret = Dfs(start_i, start_j, end_i, end_j, walls_unique)\n\t\t\t\tbreak\n\t\t\tcase \"greedy\":\n\t\t\t\t// console.log(\"greedy\")\n\t\t\t\tret = greedy(start_i, start_j, end_i, end_j, walls_unique)\n\t\t\t\tbreak\n\t\t\tcase \"astar\":\n\t\t\t\tret = astar(start_i, start_j, end_i, end_j, walls_unique)\n\t\t\t\tbreak\n\t\t\tcase \"dijkstra\":\n\t\t\t\tret = dijkstra(start_i, start_j, end_i, end_j, walls_unique)\n\t\t\t\tbreak\n\n\t\t}\n\t\tthis.reset_paths()\n\t\tlet wait_time = this.animate_pathfind(ret)\n\t\t// console.log(wait_time)\n\t\tif (ret[ret.length-1][0][0] != undefined) {\n\t\t\t// console.log(algorithm, \" \", ret[ret.length-1].length)\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.animate_backtrack(ret[ ret.length - 1])\n\t\t\t}, wait_time)\n\t\t}\n\t}\n\n\t/************************* Animation Methods *************************/\n\t// pathfinding animation\n\tanimate_pathfind(path) {\n\t\t// length is path - 1 because the last element of the input is the array for backtrack steps\n\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\tlet x = path[i][0]\n\t\t\tlet y = path[i][1]\n\t\t\tconst str = 'cell-' + x + '-' + y\n\t\t\tif (document.getElementById(str).className == 'cell cell-start') {\n\t\t\t// if (x == start_i && y == start_j) {\n\t\t\t\t// document.getElementById(str).className = 'cell cell-start'\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (document.getElementById(str).className == 'cell cell-finish') {\n\t\t\t// if (x == end_i && y == end_j) {\n\t\t\t\t// document.getElementById(str).className = 'cell cell-finish'\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t\n\t\t\t// if (x == 15 && y == 20 || x == 15 && y==30) {\n\t\t\t// \tconsole.log(\"debugging \", document.getElementById(str).className)\n\t\t\t// }\n\t\t\t// if (document.getElementById(str).className== 'cell ') {\n\t\t\t\t// for some reason, having a console.log makes the color change, but not having this doesnt\n\t\t\t\t// if (x == 15 && y == 20 || x == 15 && y==30) {\n\t\t\t\t// \tconsole.log(\"debugging \", document.getElementById(str).className, \" \", x, \" \", y)\n\t\t\t\t// }\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(str).className = 'cell cell-visited'\n\t\t\t\t// this.animate_backtrack(path[ path.length - 1])\n\t\t\t},10 * i)\n\t\t\t// }\n\t\t}\n\t\treturn 10 * path.length\n\n\t}\n\n\t// backtrack animation\n\tanimate_backtrack(path) {\n\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\tlet x = path[i][0]\n\t\t\tlet y = path[i][1]\n\t\t\tif (x == start_i && y == start_j) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (x == end_i && y == end_j) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// console.log(x, y)\n\t\t\tconst str = 'cell-' + x + '-' + y\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(str).className = 'cell cell-backtrack'\n\t\t\t},50 * i);\n\t\t}\n\t}\n\n\tanimate_maze() {\n\t\tfor (let i = 0; i < walls.length; i++) {\n\t\t\tconst str = 'cell-' + walls[i][0] + '-' + walls[i][1]\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(str).className = 'cell cell-wall'\n\t\t\t},5 * i);\n\t\t}\n\t}\n\n\tdark_animate_maze(maze) {\n\t\tfor (let i = 0; i < maze.length; i++) {\n\t\t\tconst str = 'cell-' + maze[i][0] + '-' + maze[i][1]\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(str).className = 'cell '\n\t\t\t},5 * i);\n\t\t}\n\t}\n\n\t/****************************** Generate Walls *************************/\n\n\tcreateWall(event) {\n\t\tif (event.shiftKey) {\n\t\t\tconst {id} = event.currentTarget // row and col are not returned for this\n\t\t\tlet r = parseInt(document.getElementById(id).getAttribute(\"row\"))\n\t\t\tlet c = parseInt(document.getElementById(id).getAttribute(\"col\"))\n\t\t\tdocument.getElementById(id).className = 'cell cell-wall'\n\t\t\tlet a = id.split(\"-\")[1]\n\t\t\tlet b = id.split(\"-\")[2]\n\t\t\t// console.log(a,b)\n\t\t\twalls.push([a,b])\n\t\t} \n\t}\n\n\tmake_maze() {\n\t\tthis.reset()\n\t\twalls = random_maze()\n\t\tthis.animate_maze()\n\t}\n\n\tdark_maze(maze_type) {\n\t\tlet out;\n\t\tthis.darken()\n\t\tswitch(maze_type) {\n\t\t\tcase \"kruskal\":\n\t\t\t\tout = random_kruskal()\n\t\t\t\tbreak\n\t\t\tcase \"prim\":\n\t\t\t\tout = random_prims()\n\t\t\t\tbreak\n\t\t\tcase \"wilson\":\n\t\t\t\tout = wilson()\n\t\t\t\tbreak\n\t\t}\n\t\twalls = out.walls\n\t\tthis.dark_animate_maze(out.maze)\n\t}\n\n\n\t/****************************** Mouse Click Methods *************************/\n\tstartEnd(event) {\n\t\t// TODO;\n\t\t// disallow clicking of walls\n\t\tconst {id} = event.currentTarget // row and col are not returned for this\n\t\tlet r = parseInt(document.getElementById(id).getAttribute(\"row\"))\n\t\tlet c = parseInt(document.getElementById(id).getAttribute(\"col\"))\n\t\tif (this.state.start_end == 0) {\n\t\t\t// reset the start colors\n\t\t\tdocument.getElementById('cell-' + start_i + '-' + start_j).className = 'cell '\n\t\t\tdocument.getElementById(id).className = 'cell cell-start'\n\t\t\tthis.setState({\n\t\t\t\tstart_end: 1\n\t\t\t})\n\t\t\tstart_i = r\n\t\t\tstart_j = c\n\t\t} else {\n\t\t\tdocument.getElementById('cell-' + end_i + '-' + end_j).className = 'cell '\n\t\t\tdocument.getElementById(id).className = 'cell cell-finish'\n\t\t\tthis.setState({\n\t\t\t\tstart_end: 0\n\t\t\t})\n\t\t\tend_i = r\n\t\t\tend_j = c\n\t\t}\n\t\t\n\t}\n\n\t// darkens the entire grid\n\tdarken() {\n\t\tfor (let i = 0; i < row_count; i++) {\n\t\t\tfor (let j = 0; j < col_count; j++) {\n\t\t\t\tlet id = 'cell-' + i + '-' + j;\n\t\t\t\tdocument.getElementById(id).className = 'cell cell-wall'\n\t\t\t}\n\t\t}\n\t}\n\n\t// clears the entire grid\n\treset() {\n\t\tfor (let i = 0; i < row_count; i++) {\n\t\t\tfor (let j = 0; j < col_count; j++) {\n\t\t\t\tlet id = 'cell-' + i + '-' + j;\n\t\t\t\tdocument.getElementById(id).className = 'cell '\n\t\t\t}\n\t\t}\n\t}\n\n\t// keeps the walls; resets the path colors\n\treset_paths() {\n\t\tfor (let i = 0; i < row_count; i++) {\n\t\t\tfor (let j = 0; j < col_count; j++) {\n\t\t\t\tlet id = 'cell-' + i + '-' + j;\n\t\t\t\tif (document.getElementById(id).className == 'cell cell-visited' || \n\t\t\t\tdocument.getElementById(id).className == 'cell cell-backtrack') {\n\t\t\t\t\tdocument.getElementById(id).className = 'cell '\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/****************************** Rendering *************************/\n\trender() {\n\t\t// setup for grid\n\t\tlet grid = []\n\t\tfor (let i = 0; i < row_count; i++) {\n\t\t\tlet temp = []\n\t\t\tfor (let j = 0; j < col_count; j++) {\n\t\t\t\ttemp.push(0)\n\t\t\t}\n\t\t\tgrid.push(temp)\n\t\t}\n\t\tlet maze_list = [\"kruskal\", \"prim\", \"wilson\"]\n\t\tlet alg_list = [\"bfs\", \"dfs\", \"greedy\", \"astar\", \"dijkstra\"]\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className = \"grid\" > \n\n\t\t\t\t\t{grid.map((row, row_index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{row.map((col, col_index) => {\n\t\t\t\t\t\t\t\tconst cell = this.create_cell()\n\t\t\t\t\t\t\t\tlet {type, weight} = cell\n\t\t\t\t\t\t\t\tif (row_index == start_i && col_index == start_j) {\n\t\t\t\t\t\t\t\t\ttype = 'cell-start'\n\t\t\t\t\t\t\t\t} else if (row_index == end_i && col_index == end_j) {\n\t\t\t\t\t\t\t\t\ttype = 'cell-finish'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (<Cell element_id={'cell-' + row_index + '-' + col_index}\n\t\t\t\t\t\t\t\ttype = {type} weight = {weight} row = {row_index} col = {col_index} \n\t\t\t\t\t\t\t\tonMouseMove={this.createWall} \n\t\t\t\t\t\t\t\tonClick={this.startEnd} />)\n\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t\" \"\n\t\t\t\t</div>\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div id=\"pathfinder-dropdown\" class=\"row text-center\">\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"dropdown\" >\n\t\t\t\t\t\t\t\t<button class=\"btn btn-secondary dropdown-toggle\" className=\"algorithms-button\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t\t\tSelect Algorithm\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t\t\t{alg_list.map((alg) => {\n\t\t\t\t\t\t\t\t\t// console.log(typeof(alg))\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" className=\"algorithms-menu\" onClick = {()=>this.handleSearch(\n\t\t\t\t\t\t\t\t\t\t\t\t\tstart_i,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstart_j,\n\t\t\t\t\t\t\t\t\t\t\t\t\tend_i,\n\t\t\t\t\t\t\t\t\t\t\t\t\tend_j,\n\t\t\t\t\t\t\t\t\t\t\t\t\twalls,\n\t\t\t\t\t\t\t\t\t\t\t\t\talg)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tVisualize {alg}\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-divider\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-secondary\" className=\"btn-xlarge\" id=\"reset button\"\n\t\t\t\t\t\t\tonClick={()=>this.reset()}>\n\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"dropdown\" >\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-secondary dropdown-toggle\" className=\"maze-button\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t\t\t\tSelect Maze\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" className=\"maze-menu\" onClick = {this.make_maze}>\n\t\t\t\t\t\t\t\t\t\t\t\tGeneral Maze\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-divider\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{maze_list.map((maze) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" className=\"maze-menu\" onClick = {()=>this.dark_maze(maze)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{maze} maze\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"dropdown-divider\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}