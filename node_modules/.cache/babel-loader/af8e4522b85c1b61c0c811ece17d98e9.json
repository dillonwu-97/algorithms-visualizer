{"ast":null,"code":"import React from 'react';\n\nfunction backtrack(start_i, start_j, end_i, end_j, v) {\n  let ret = [[end_i, end_j]];\n\n  while (end_i != start_i || end_j != start_j) {\n    // console.log(end_i ,end_j)\n    ret.push(v[end_i][end_j]);\n    let a = end_i;\n    let b = end_j;\n    end_i = v[a][b][0];\n    end_j = v[a][b][1];\n  }\n\n  return ret;\n}\n\nfunction initialize_visited(row_count, col_count) {\n  var visited = new Array(row_count);\n\n  for (let i = 0; i < row_count; i++) {\n    visited[i] = new Array(col_count).fill(0);\n  }\n\n  return visited;\n}\n\nexport { backtrack, initialize_visited };","map":{"version":3,"sources":["/Users/Kvothe/Desktop/git/algorithms-visualizer/algorithms-visualizer/src/algorithms/path_algs/general.js"],"names":["React","backtrack","start_i","start_j","end_i","end_j","v","ret","push","a","b","initialize_visited","row_count","col_count","visited","Array","i","fill"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmDC,CAAnD,EAAsD;AACrD,MAAIC,GAAG,GAAG,CAAC,CAACH,KAAD,EAAQC,KAAR,CAAD,CAAV;;AACA,SAAMD,KAAK,IAAIF,OAAT,IAAoBG,KAAK,IAAIF,OAAnC,EAA4C;AAC3C;AACAI,IAAAA,GAAG,CAACC,IAAJ,CAASF,CAAC,CAACF,KAAD,CAAD,CAASC,KAAT,CAAT;AACA,QAAII,CAAC,GAAGL,KAAR;AACA,QAAIM,CAAC,GAAGL,KAAR;AACAD,IAAAA,KAAK,GAAGE,CAAC,CAACG,CAAD,CAAD,CAAKC,CAAL,EAAQ,CAAR,CAAR;AACAL,IAAAA,KAAK,GAAGC,CAAC,CAACG,CAAD,CAAD,CAAKC,CAAL,EAAQ,CAAR,CAAR;AACA;;AACD,SAAOH,GAAP;AAGA;;AAED,SAASI,kBAAT,CAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AACjD,MAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAUH,SAAV,CAAd;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AACnCF,IAAAA,OAAO,CAACE,CAAD,CAAP,GAAa,IAAID,KAAJ,CAAUF,SAAV,EAAqBI,IAArB,CAA0B,CAA1B,CAAb;AACA;;AACD,SAAOH,OAAP;AACA;;AAED,SAAQb,SAAR,EAAmBU,kBAAnB","sourcesContent":["import React from 'react';\n\n\nfunction backtrack(start_i, start_j, end_i, end_j, v) {\n\tlet ret = [[end_i, end_j]]\n\twhile(end_i != start_i || end_j != start_j) {\n\t\t// console.log(end_i ,end_j)\n\t\tret.push(v[end_i][end_j])\n\t\tlet a = end_i\n\t\tlet b = end_j\n\t\tend_i = v[a][b][0]\n\t\tend_j = v[a][b][1]\n\t}\n\treturn ret\n\t\n\n}\n\nfunction initialize_visited(row_count, col_count) {\n\tvar visited = new Array(row_count)\n\tfor (let i = 0; i < row_count; i++) {\n\t\tvisited[i] = new Array(col_count).fill(0)\n\t}\n\treturn visited\n}\n\nexport {backtrack, initialize_visited}"]},"metadata":{},"sourceType":"module"}